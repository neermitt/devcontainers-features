name: "CI - Test Features"
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  list-features:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls src/ | jq -R -s -c 'split("\n")[:-1]')"
  test:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJson(needs.list-features.outputs.matrix) }}
        baseImage: [
          "ubuntu:focal",
          "ubuntu:jammy",
          "debian:11",
          "mcr.microsoft.com/devcontainers/base:ubuntu",
          "mcr.microsoft.com/devcontainers/base:debian",
        ]
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .


  test-scenarios:
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJson(needs.list-features.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated  .

  test-global:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v3

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing global scenarios"
        run: devcontainer features test --global-scenarios-only .